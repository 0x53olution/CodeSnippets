<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YsxkgPr4AAAAAElFTkSuQmCC
</value>
  </data>
</root>